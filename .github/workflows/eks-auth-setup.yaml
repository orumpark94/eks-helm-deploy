name: EKS Auth Setup

on:
  workflow_dispatch:

jobs:
  configure-auth:
    name: Configure aws-auth for Worker Nodes
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      EKS_CLUSTER_NAME: eks-gitops-eks
      TF_BUCKET: eks-terrafrom
      TF_KEY: eks/terraform.tfstate

    steps:
    - name: üì• Checkout repository
      uses: actions/checkout@v3

    - name: üîê Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: üîß Install Terraform CLI
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: 1.5.7

    - name: ‚öôÔ∏è Load Terraform output from remote S3 state
      run: |
        terraform init \
          -backend-config="bucket=$TF_BUCKET" \
          -backend-config="key=$TF_KEY" \
          -backend-config="region=$AWS_REGION"
        
        NODE_ROLE_ARN=$(terraform output -raw node_role_arn)
        echo "NODE_ROLE_ARN=$NODE_ROLE_ARN" >> $GITHUB_ENV

    - name: üìù Generate aws-auth.yaml (with secret-based root user)
      run: |
        mkdir -p k8s
        cat <<EOF > k8s/aws-auth.yaml
        apiVersion: v1
        kind: ConfigMap
        metadata:
          name: aws-auth
          namespace: kube-system
        data:
          mapRoles: |
            - rolearn: ${NODE_ROLE_ARN}
              username: system:node:{{EC2PrivateDNSName}}
              groups:
                - system:bootstrappers
                - system:nodes
          mapUsers: |
            - userarn: ${{ secrets.ROOT_USER_ARN }}
              username: root
              groups:
                - system:masters
        EOF

    - name: üõ∞Ô∏è Update kubeconfig
      run: |
        aws eks update-kubeconfig \
          --region $AWS_REGION \
          --name $EKS_CLUSTER_NAME

    - name: ‚úÖ Apply aws-auth ConfigMap
      run: |
        kubectl apply -f k8s/aws-auth.yaml

    - name: üîç Check EKS Nodes (Optional)
      run: |
        kubectl get nodes -o wide
