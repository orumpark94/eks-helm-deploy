name: ArgoCD Upgrade or Rollback

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Choose action: upgrade or rollback"
        required: true
        default: "upgrade"
        type: choice
        options:
          - upgrade
          - rollback
      rollback_revision:
        description: "If rollback, specify revision number (e.g., 1)"
        required: false

jobs:
  deploy-argocd:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: ap-northeast-2
      EKS_CLUSTER_NAME: eks-gitops-eks

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v3

      - name: üîê Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: üì° Set up kubectl config
        run: |
          aws eks update-kubeconfig \
            --region ${{ env.AWS_REGION }} \
            --name ${{ env.EKS_CLUSTER_NAME }}

      - name: üõ†Ô∏è Install Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.13.3

      - name: üéØ Perform Helm Action
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo update

          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -

          if [ "${{ github.event.inputs.action }}" == "upgrade" ]; then
            echo "üöÄ Performing upgrade/install..."
            helm upgrade --install argocd argo/argo-cd \
              -n argocd \
              -f helm/argocd/values.yaml \
              --version 5.51.5
          elif [ "${{ github.event.inputs.action }}" == "rollback" ]; then
            echo "‚Ü©Ô∏è Performing rollback to revision ${{ github.event.inputs.rollback_revision }}..."
            helm rollback argocd ${{ github.event.inputs.rollback_revision }} -n argocd
          else
            echo "‚ùå Invalid action"
            exit 1
          fi
